buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name = "ChickenBones"
        url = "http://chickenbones.net/maven"
    }
}


apply plugin: 'java'

compileJava.options.encoding = 'UTF-8';
sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

apply plugin: 'forge'

version = "1.7.2-1.4"
group= "nemocraft.hangul" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "nemocraftHangul"

minecraft {
    version = "1.7.2-10.12.1.1060"
    if (file('../run').exists()) {
        assetDir = "../run/assets"
    } else {
        assetDir = "run/assets"
    }
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'nemocraft.hangul.HangulPlugin', 'FMLCorePluginContainsFMLMod': 'true'
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    compile "codechicken:CodeChickenLib:1.7.2-1.1.1.80:dev"
    compile "codechicken:CodeChickenCore:1.7.2-1.0.0:dev"
    compile "codechicken:NotEnoughItems:1.7.2-1.0.1:dev"

    if (file('../run').exists()) {
        compile files ("../run/mods/appliedenergistics2-deobf-rv0-alpha-115.jar")
    } else {
        compile files ("run/mods/appliedenergistics2-deobf-rv0-alpha-115.jar")
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// because the normal default jar task has been modified to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    appendix = 'dev'

    manifest {
        attributes 'FMLCorePlugin': 'nemocraft.hangul.HangulPlugin', 'FMLCorePluginContainsFMLMod': 'true'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    appendix = 'src'

    manifest {
        attributes 'FMLCorePlugin': 'nemocraft.hangul.HangulPlugin', 'FMLCorePluginContainsFMLMod': 'true'
    }
}

artifacts {
    archives deobfJar
    archives sourceJar
}
